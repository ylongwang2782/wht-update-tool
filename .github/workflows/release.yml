name: Build and Release Qt App (Windows)

on:
  workflow_dispatch:   # 手动触发

jobs:
  build:
    runs-on: windows-latest

    steps:
      # 拉取代码（带完整 tag）
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 获取最新 git tag
      - name: Get latest git tag
        id: get_version
        shell: bash
        run: |
          # 获取最新的 tag，如果没有则使用 commit hash
          if git describe --tags --abbrev=0 2>/dev/null; then
            VERSION=$(git describe --tags --abbrev=0)
          else
            VERSION=$(git rev-parse --short HEAD)
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      # 安装 Qt
      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: '6.9.1'           
          host: 'windows'
          target: 'desktop'
          arch: 'win64_msvc2022_64'
          modules: qtserialport   

      # 配置 CMake
      - name: Configure CMake
        run: cmake -B build -S . -DCMAKE_PREFIX_PATH="%Qt6_DIR%" -DQT_DEBUG_FIND_PACKAGE=ON

      # 编译
      - name: Build
        run: cmake --build build --config release

      # 使用 windeployqt 收集依赖
      - name: Run windeployqt
        run: |
          mkdir dist
          copy build\\release\\wht-update-tool.exe dist\\
          windeployqt dist\\wht-update-tool.exe --release --no-translations

      # 打包 zip
      - name: Create zip package
        run: |
          powershell Compress-Archive -Path dist\\* -DestinationPath wht-update-tool-${{ steps.get_version.outputs.version }}-win64.zip

      # 上传 Release
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          name: "Release ${{ steps.get_version.outputs.version }}"
          files: wht-update-tool-${{ steps.get_version.outputs.version }}-win64.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
